{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "projectUrl": {
            "Description": "Git project URL. (https://github.com/<your-name>/java-project.git)",
            "Type": "String"
        },
        "webami": {
            "Description": "Web server AMI.",
            "Type": "String",
            "Default": "ami-026c8acd92718196b"
        },
        "webtype": {
            "Description": "Web server instance type",
            "Type": "String",
            "Default": "t3.micro"
        },
        "asgsize": {
            "Description": "ASG size.",
            "Type": "String",
            "Default": "2"
        },
        "GitHubUsername": {
            "Type": "String"
        },
        "GitHubAccessToken": {
            "Type": "String",
            "NoEcho": true
        },
        "GitHubBranchName": {
            "Description": "GitHub branch name",
            "Type": "String",
            "Default": "master"
        },
        "GitHubRepositoryName": {
            "Description": "GitHub repository name",
            "Type": "String",
            "Default": "python-project"
        },
        "KeyName": {
            "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
          },
          "YourIp": {
            "Description": "The current CIDR IP address of your workstation (x.x.x.x/32). http://checkip.amazonaws.com/",
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-9]|3[0-2]))$",
            "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
          }
    },
    "Resources": {

        "ArtifactBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },

        "ArtifactBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "ArtifactBucket"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "DenyUnEncryptedObjectUploads",
                            "Effect": "Deny",
                            "Principal": "*",
                            "Action": "s3:PutObject",
                            "Resource": {
                                "Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "ArtifactBucket",
                                                "Arn"
                                            ]
                                        },
                                        "/*"
                                    ]
                                ]
                            },
                            "Condition": {
                                "StringNotEquals": {
                                    "s3:x-amz-server-side-encryption": "aws:kms"
                                }
                            }
                        }
                    ]
                }
            }
        },

        "Vpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
              "EnableDnsSupport": "true",
              "EnableDnsHostnames": "true",
              "CidrBlock": "10.0.0.0/16",
              "Tags": [
                {
                  "Key": "Environment",
                  "Value": "Test"
                }
              ]
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                },
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone" : "us-east-1a"
            }
        },
    
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                },
                "CidrBlock": "10.0.1.0/24",
                "AvailabilityZone" : "us-east-1b"
            }
        },

        "ElbSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                    },
                "GroupDescription": "Allow http access from everywhere",
                "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "80",
                            "ToPort": "80",
                            "CidrIp": "0.0.0.0/0"
                        }
                    ]
            }
        },

        "WebserverSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "Vpc"
                    },
                "GroupDescription": "Allow port 80 from ELB and 22 from admin",
                "SecurityGroupIngress": [
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "22",
                            "ToPort": "22",
                            "CidrIp": {"Ref": "YourIp"}
                        },
                        {
                            "IpProtocol": "tcp",
                            "FromPort": "80",
                            "ToPort": "80",
                            "SourceSecurityGroupId": {
                                "Fn::GetAtt": ["ElbSG", "GroupId"]
                            }
                        }
                    ]
            }
        },

        "InternetGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {}
        },
        "VpcGwAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGW"
                },
                "VpcId": {
                    "Ref": "Vpc"
                }
            }
        },
        "PublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                "Ref": "Vpc"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                    "DestinationCidrBlock": "0.0.0.0/0",
                    "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "GatewayId": {
                    "Ref": "InternetGW"
                }
            },
            "DependsOn": [
                "InternetGW"
            ]
        },
        "PublicSubnet1RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "PublicSubnet2RTassoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },

        "ELB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "LoadBalancerAttributes": [
                    {
                        "Key": "idle_timeout.timeout_seconds",
                        "Value": "30"
                    }
                ],
                "Name": { "Fn::Join": [ "", [{"Ref": "AWS::StackName"},"-alb"] ] },
                "Scheme": "internet-facing",
                "SecurityGroups": [ {"Ref": "ElbSG"} ],
                "Subnets": [
                    { "Ref": "PublicSubnet1"},
                    { "Ref": "PublicSubnet2"}
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [{"Ref": "AWS::StackName"},"-","-alb"] ] }
                    }
                ]
            }
        },

        "ELBListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": { "Ref": "ELBTargetGroup" },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {"Ref": "ELB"},
                "Port": "80",
                "Protocol": "HTTP"
            }
        },

        "ELBTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "HealthCheckPath": "/health",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "UnhealthyThresholdCount": 2,
                "TargetType": "instance",
                "Port": 80,
                "Protocol": "HTTP",
                "VpcId": {"Ref": "Vpc"}
            }
        },

        "WebGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "DesiredCapacity": {"Ref": "asgsize"},
                "LaunchConfigurationName": {
                    "Ref": "WebLaunchConf"
                },
                "MaxSize": {"Ref": "asgsize"},
                "MinSize": {"Ref": "asgsize"},
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": "true",
                        "Value": "webapp"
                    },
                    {
                        "Key": "Role",
                        "PropagateAtLaunch": "true",
                        "Value": "webserver"
                    }
                ],
                "TargetGroupARNs": [
                    {"Ref": "ELBTargetGroup"}
                ],
                "VPCZoneIdentifier": [
                    {"Ref": "PublicSubnet1"},
                    {"Ref": "PublicSubnet2"}
                ]
            }
        },

        "WebInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "WebInstanceRole"
                    }
                ]
            }
        },

        "WebLaunchConf": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "AssociatePublicIpAddress": "true",
                "IamInstanceProfile": {
                    "Ref": "WebInstanceProfile"
                },
                "ImageId": {
                    "Ref": "webami"
                },
                "InstanceType": {
                    "Ref": "webtype"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "WebserverSG"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "apt-get update -y\n",
                                "apt-get install ruby -y\n",
                                "apt-get install wget -y\n",
                                "mkdir /opt/python-app\n",
                                "cd /home/ubuntu\n",
                                "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install\n",
                                "chmod +x ./install\n",
                                "sudo ./install auto\n",
                                "service codedeploy-agent start\n",
                                "rm install\n"
                            ]
                        ]
                    }
                }
            }
        },
        "WebInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess"
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "ArtifactBucket",
                                                "Arn"
                                            ]
                                        },
                                        {"Fn::Join": [
                                            "",
                                            [
                                                {
                                                    "Fn::GetAtt": [
                                                        "ArtifactBucket",
                                                        "Arn"
                                                    ]
                                                },
                                                "/*"
                                            ]
                                        ]}
                                    ],
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:GetBucketAcl",
                                        "s3:GetBucketLocation"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "ec2codedeploy"
                    }
                ]
            }
        },

        "AppBuildProject": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Description": "app build project",
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "Image": "aws/codebuild/standard:6.0",
                    "ImagePullCredentialsType": "CODEBUILD",
                    "Type": "LINUX_CONTAINER"
                },
                "ServiceRole": { "Fn::GetAtt": [ "AppBuildRole", "Arn" ] },
                "Source": {
                    "Type": "CODEPIPELINE"
                }
            }
        },

        "AppBuildRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                 "Version" : "2012-10-17",
                 "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                       "Service": [ "codebuild.amazonaws.com" ]
                    },
                    "Action": [ "sts:AssumeRole" ]
                 } ]
              },
              "Path": "/",
              "Policies": [
                {
                    "PolicyName": "CodeBuildAccess",
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                {"Fn::Sub": "arn:aws:s3:::codepipeline-${AWS::Region}-*"}
                            ],
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "ArtifactBucket",
                                        "Arn"
                                    ]
                                },
                                {"Fn::Join": [
                                    "",
                                    [
                                        {
                                            "Fn::GetAtt": [
                                                "ArtifactBucket",
                                                "Arn"
                                            ]
                                        },
                                        "/*"
                                    ]
                                ]}
                            ],
                            "Action": [
                                "s3:GetObject",
                                "s3:PutObject",
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ]
                        }
                      ]
                    }
                  }
              ]
           }
        },

        "BuildLogPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
               "PolicyName": "BuildLogAccess",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [
                    {
                        "Effect": "Allow",
                        "Resource": [
                            {"Fn::Sub": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${project}",
                                {"project": {
                                    "Ref": "AppBuildProject"
                                    }
                                }
                                ]
                            },
                            {"Fn::Sub": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${project}:*",
                                {"project": {
                                    "Ref": "AppBuildProject"
                                    }
                                }
                                ]
                            }
                        ],
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ]
                    }
                    ]
               },
               "Roles": [ { "Ref": "AppBuildRole" }]
            }
        },

        "WebPlatformApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
                "ComputePlatform": "Server"
            }
        },

        "WebPlatformDeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
                "ApplicationName": {"Ref": "WebPlatformApplication"},
                "AutoScalingGroups": [
                    {"Ref": "WebGroup"}
                ],
                "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
                "DeploymentStyle": {
                    "DeploymentOption": "WITH_TRAFFIC_CONTROL",
                    "DeploymentType": "IN_PLACE"
                },
                "LoadBalancerInfo": {
                    "TargetGroupInfoList": [
                        {
                            "Name":  {"Fn::GetAtt": ["ELBTargetGroup", "TargetGroupName"]}
                        }
                    ]
                },
                "ServiceRoleArn": {"Fn::GetAtt": ["CodeDeployServiceRole", "Arn"]}
            }
        },

        "CodeDeployServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
                ]
            }
        },

        "CodePipelineServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": ["codepipeline.amazonaws.com"]
                            },
                            "Action": ["sts:AssumeRole"]
                        }
                    ]
                },
                "Path": "/service-role/",
                "Policies": [
                    {
                        "PolicyName": "CodePipelineS3Access",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject",
                                        "s3:GetObject",
                                        "s3:GetBucketAcl",
                                        "s3:GetBucketLocation"
                                    ],
                                    "Resource": [
                                        { "Fn::GetAtt": ["ArtifactBucket", "Arn"] },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    { "Fn::GetAtt": ["ArtifactBucket", "Arn"] },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CodePipelineCodeCommitAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codecommit:CancelUploadArchive",
                                        "codecommit:GetBranch",
                                        "codecommit:GetCommit",
                                        "codecommit:GetUploadArchiveStatus",
                                        "codecommit:UploadArchive"
                                    ],
                                    "Resource": [{ "Fn::GetAtt": ["JavaRepository", "Arn"] }]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CodePipelineCodeBuildAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild"
                                    ],
                                    "Resource": [{ "Fn::GetAtt": ["AppBuildProject", "Arn"] }]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CodePipelineLogging",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/*"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        }
        

    },
    "Outputs": {
        "ELBEndpoint": {
            "Description": "ELB DNS endpoint address",
            "Value": {"Fn::GetAtt": ["ELB", "DNSName"]}
        },
        "S3BucketDomain": {
            "Description": "S3 bucket domain name",
            "Value": {"Fn::GetAtt": ["ArtifactBucket", "DomainName"]}
        }
    }
}